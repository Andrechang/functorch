name: Wheels
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - release/*

jobs:

  build-wheel-linux:
    runs-on: ubuntu-18.04
    container: pytorch/manylinux-cpu
    strategy:
      matrix:
        python_abi: [ "cp37-cp37m", "cp38-cp38", "cp39-cp39", "cp310-cp310" ]
    steps:
      - name: Checkout functorch
        uses: actions/checkout@v2
      - name: Install PyTorch 1.11 RC
        run: |
          export PATH="/opt/python/${{ matrix.python_abi }}/bin:$PATH"
          python3 -mpip install torch==1.11.0
      - name: Build wheel
        run: |
          export PATH="/opt/python/${{ matrix.python_abi }}/bin:$PATH"
          python3 -mpip install wheel
          python3 setup.py bdist_wheel
          # NB: wheels have the linux_x86_64 prefix, need to be manually renamed
      - name: Upload wheel as GHA artifact
        uses: actions/upload-artifact@v2
        with:
          name: functorch-linux.whl
          path: dist/*.whl

  build-wheel-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        python_version: [ "3.7", "3.8", "3.9", "3.10" ]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - name: Checkout functorch
        uses: actions/checkout@v2
      - name: Install PyTorch 1.11 RC
        run: |
          python3 -mpip install torch==1.11.0
      - name: Build wheel
        run: |
          export CC=clang CXX=clang++
          python3 -mpip install wheel
          python3 setup.py bdist_wheel
      - name: Upload wheel as GHA artifact
        uses: actions/upload-artifact@v2
        with:
          name: functorch-mac.whl
          path: dist/*.whl
